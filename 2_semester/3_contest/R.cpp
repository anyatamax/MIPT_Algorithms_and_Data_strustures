// Студенты ФПМИ придумали новую версию калькулятора. Этот калькулятор берет с пользователя валюту за совершаемые операции. Стоимость каждой операции в ФПМИ-коинах равна 5% от числа, которое является результатом операции.
// На этом калькуляторе требуется вычислить сумму N натуральных чисел (числа, так уж и быть, известны). Нетрудно заметить, что от того, в каком порядке мы будем складывать эти числа, иногда зависит, в какую ФПМИ-коинов нам обойдется вычисление суммы чисел (то есть оказывается нарушено великое правило «от перестановки мест слагаемых сумма не меняется»).
// Например, пусть нам нужно сложить числа 10, 11, 12, 13. Подумайте, как от порядка вычислений зависит ответ. Напишите программу, используя std::priority_queue, которая будет определять, за какую минимальную сумму ФПМИ-коинов можно найти сумму данных N чисел.

// Формат ввода
// Во входном файле записано число N (2 ≤ N ≤ 10^5). Далее идет N натуральных чисел, которые нужно сложить, каждое из них не превышает 10^4.
// Формат вывода
// В выходной файл выведите, сколько ФПМИ-коинов нам потребуется на нахождение суммы этих N чисел.


#include <iostream>
#include <algorithm>
#include <string>
#include <queue>
#include <vector>
#include <functional>

int main () {
    int number;
    std::priority_queue<int, std::vector<int>, std::greater<>> digits;
    std::cin >> number;
    for (size_t i = 0; i < number; ++i) {
        int digit;
        std::cin >> digit;
        digits.push(digit);
    }
    double per_cent = 0;
    if (digits.size() < 2) {
        std::cout << 0;
        return 0;
    }
    while (digits.size() >= 2) {
        int first = digits.top();
        digits.pop();
        int second = digits.top();
        digits.pop();
        per_cent += (first + second) * 0.05;
        digits.push(first + second);
    }
    std::cout << per_cent;
    return 0;
}
